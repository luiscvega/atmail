openapi: 3.0.2
info:
  version: 1.0.0
  title: Users schema
security:
  - basicAuth: []
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                age:
                  type: integer
                  format: int64
              required:
                - username
                - email
                - age
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
  /users/{id}:
    get:
      summary: Get a user
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
    put:
      summary: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                age:
                  type: integer
                  format: int64
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'

    delete:
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        400:
          $ref: '#/components/responses/badRequest'
        401:
          $ref: '#/components/responses/unauthorized'
        500:
          $ref: '#/components/responses/internalServerError'
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        age:
          type: integer
          format: int64
      required:
        - id
        - username
        - email
        - age
  responses:
    badRequest:
      summary: Bad request
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
    unauthorized:
      summary: Admin unauthorized
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
    internalServerError:
      summary: Internal server error
      application/json:
        schema:
          type: object
          properties:
            error:
              type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
